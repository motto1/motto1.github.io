<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>stun穿透+tailscale方案进行远程访问（待工）</title>
    <link href="/2024/06/07/stun%E7%A9%BF%E9%80%8F+tailscale%E6%96%B9%E6%A1%88%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    <url>/2024/06/07/stun%E7%A9%BF%E9%80%8F+tailscale%E6%96%B9%E6%A1%88%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<p>stun穿透的前提是nat1，可以将内网服务通过本地网络上层的公网ip加端口开放出去。公网ip和端口一般会不定期的更新。所以基于这些特性，来优化stun穿透的使用体验。</p><p>这里我使用一个特别好用的工具：<strong>lucky</strong>。基本的关于网络设置的功能他都有并且使用简单方便。</p><hr><h1 id="搭建网页服务"><a href="#搭建网页服务" class="headerlink" title="搭建网页服务"></a>搭建网页服务</h1><h2 id="1-设置ddns"><a href="#1-设置ddns" class="headerlink" title="1.设置ddns"></a>1.设置ddns</h2><p>lucky的ddns非常方便，我推荐使用一些免费的二级域名来做ddns。例如dynv6或者freemyip。</p><p>ddns具体步骤就不细说了，因为这很简单。注意要将域名和子域名都添加上。</p><p>这里要选择通过接口获取ip，这样就是ddns公网ipv4地址。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718265071822.6pnd1plgbx.webp" alt="ddns"></p><h2 id="2设置反向代理"><a href="#2设置反向代理" class="headerlink" title="2设置反向代理"></a>2设置反向代理</h2><p>设置反向代理有很多好处，其一是只用穿透一个端口就可以多个本地服务，非常方便。同时反向代理也更安全。</p><p>我们创建一个新的web服务规则打开tcp4和tls，同时自行设置一个没用过的端口作为监听端口，我这里设置为9902。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718447259763.4uasc3r9ei.webp" alt="web服务规则"></p><p>设置好后，就可以开始添加子规则。这里前端地址设置为自己ddns的域名，前缀添加为自己容易记忆的字符串。比如我这里是反代lucky，就将前缀填写为lucky。后端地址就填lucky在本地的地址加端口。</p><p>如果你还想添加更多的子规则就如法炮制就可以了。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718447437789.6t6z2fys14.webp" alt="子规则"></p><p>这样反向代理就设置的差不多了，我们接下来通过stun穿透将反向代理的监听端口开放出去，我这里就是上面填的9902.</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718447777899.73tsvll9g0.webp" alt="开放反向代理监听端口"></p><p>这样反向代理服务就完全设置好了。可以看到通过域名加上stun穿透的端口就可以访问了。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718448873467.5xahn0judl.webp" alt="成功访问地址"></p><h2 id="3-设置重定向服务"><a href="#3-设置重定向服务" class="headerlink" title="3.设置重定向服务"></a>3.设置重定向服务</h2><p>重定向服务是为了通过一个固定域名加端口跳转到最新的反向代理地址。所以我们可以借用国内的frp服务来实现这种效果，并且由于只做基本的跳转，也并不消耗多少流量。</p><p>我们添加一个新的规则，同样选择tcp4和tls，并且把监听端口设置一个没有用的端口，我这里就设置为9903。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718448009539.5j41w4t22l.webp" alt="重定向服务"></p><p>接着我们需要将重定向服务的端口通过frp开放出去。以樱花穿透为例，本地端口选择自己设置的重定向监听端口，开放端口选一个自己容易记得的端口。然后在自己的主机上连接上frp的服务就可以了</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718448174434.8hgbzn4w4r.webp" alt="frp设置"></p><p>当frp服务连接上的时候会显示连接的域名加端口<em>（我自己选择的是33333）</em>。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718448329811.9rj95yq5rt.webp" alt="frp服务连接"></p><p>接下来我们在dynv6上再申请一个域名，将泛域名通过cname的方式记录这个域名<em>（我这里就是frp-oil.top）</em>。<strong>注意，dynv6上的cname需要在记录中的域名后加上一个点才能生效。</strong></p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718448462620.8kzxxd420c.webp" alt="cname的方式记录"></p><p>接下来，回到重定向规则那里，添加子规则，服务类型选择重定向。我演示开放lucky为例，前端地址就填刚刚cname的域名，前缀自行编辑。后端就选择上面反向代理穿透出去可以访问的地址。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718448634356.54xm59y4m8.webp" alt="重定向子规则"></p><p>这样就可以通过前端地址加上固定的端口<em>（我设置的是33333）</em>就可以转跳到下面的后端地址了。</p><p>接下来我们就通过webhook让端口变换时自动同步到重定向的后端地址中。</p><h2 id="4-设置webhook自动更新端口"><a href="#4-设置webhook自动更新端口" class="headerlink" title="4.设置webhook自动更新端口"></a>4.设置webhook自动更新端口</h2><p>我们先在lucky的设置中打开opentoken，记下来这个token。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718449280421.2yy7jikbaf.webp" alt="opentoken"></p><p>然后回到重定向规则的页面，点击重定向的绿色标识会复制出来对应的接口</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718449500032.8ojjv3jftr.webp" alt="重定向api接口"></p><p>然后在stun规则的设置中开启webhook，接口中的地址和端口填写自己的本地ip和lucky服务端口即可。请求方式为put，请求头填写自己刚刚记下的token。请求主体填写刚刚复制出来的api接口，把最后的端口更换即可。</p><p>一般来说每个人都有多个服务，这里请求主体的接口拼在一起需要注意格式。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//127.0.0.1:16601/openapi/webseivce/update</span><br>PUT<br><span class="hljs-symbol">openToken:</span><br>[<span class="hljs-punctuation">&#123;</span><span class="hljs-string">&quot;rule&quot;</span>:<span class="hljs-string">&quot;D0kEqYYOq99HOEkM&quot;</span>,<span class="hljs-string">&quot;subRule&quot;</span>:<span class="hljs-string">&quot;GjszgnnKT22jSLLt&quot;</span>,<span class="hljs-string">&quot;serviceType&quot;</span>:<span class="hljs-string">&quot;redirect&quot;</span>,<span class="hljs-string">&quot;location&quot;</span>:<span class="hljs-string">&quot;https://nas.motto.dynv6.net:#&#123;port&#125;&#123;path&#125;&quot;</span><span class="hljs-punctuation">&#125;</span>,<br><span class="hljs-punctuation">&#123;</span><span class="hljs-string">&quot;rule&quot;</span>:<span class="hljs-string">&quot;D0kEqYYOq99HOEkM&quot;</span>,<span class="hljs-string">&quot;subRule&quot;</span>:<span class="hljs-string">&quot;D7dbwvZTrK5z6yY9&quot;</span>,<span class="hljs-string">&quot;serviceType&quot;</span>:<span class="hljs-string">&quot;redirect&quot;</span>,<span class="hljs-string">&quot;location&quot;</span>:<span class="hljs-string">&quot;https://lucky.motto.dynv6.net:#&#123;port&#125;&#123;path&#125;&quot;</span><span class="hljs-punctuation">&#125;</span>]<br><span class="hljs-comment">//注意[]和&#123;&#125;的对应，两个接口之间用,隔开</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-string">&quot;ret&quot;</span>:<span class="hljs-number">0</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>填写好后点一下webhook手动触发的蓝色按钮看看是不是调用成功了，如果没有就看看哪填的有问题。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/stun/1718449435837.7zqab2vwtc.webp" alt="stun的webhook设置"></p><p>这样就把端口更新也解决了</p><h2 id="5-申请证书和结束"><a href="#5-申请证书和结束" class="headerlink" title="5.申请证书和结束"></a>5.申请证书和结束</h2><p>由于开启了tls，大家最后在安全管理里面将刚刚申请的两个dynv6域名申请ssl证书，就不会出现不安全的提示了。如果不想申请，也可以把tls关了。</p><p>这样网页服务就搭建完成了，我这里只是通过思路，大家需要了解基本的原理，这样的话后期就更好维护和更改。</p><h1 id="搭建tailscale服务"><a href="#搭建tailscale服务" class="headerlink" title="搭建tailscale服务"></a>搭建tailscale服务</h1>]]></content>
    
    
    <categories>
      
      <category>远程访问</category>
      
      <category>stun穿透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>stun</tag>
      
      <tag>远程访问</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何利用ipv6公网部署ipv4可访问的服务器</title>
    <link href="/2024/02/07/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8ipv6%E5%85%AC%E7%BD%91%E9%83%A8%E7%BD%B2ipv4%E5%8F%AF%E8%AE%BF%E9%97%AE%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2024/02/07/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8ipv6%E5%85%AC%E7%BD%91%E9%83%A8%E7%BD%B2ipv4%E5%8F%AF%E8%AE%BF%E9%97%AE%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>由于现在各大运营商的公网ipv4地址越来越难以获取，自己搭建一个任意网络下可访问的服务器变的困难重重。而云服务器的费用也不低。但是现在ipv6地址基本已经普及，可以以此为起点建立一个基本可访问的服务器。<br>这里主要是使用了cloudflare的cdn代理实现，由于cloudflare的服务器在国外，所以可以通过优选ip加快访问速度。<br>我在这里为大家提供我自己学习的思路</p><hr><h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><h2 id="1-获取公网ipv6地址"><a href="#1-获取公网ipv6地址" class="headerlink" title="1.获取公网ipv6地址"></a>1.获取公网<strong>ipv6</strong>地址</h2><p>各个运营商现在都有普及ipv6，大部分情况仅需打开光猫地址，在<strong>宽带设置</strong>将ip协议改为ipv4&#x2F;ipv6就可以了。</p><p>如果想要用路由器拨号上网可以将宽带设置记录自己的宽带账号密码后，将路由模式改为桥接。之后进入自己路由器后台进行pppoe拨号上网。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1.8ad3shzf10.png" alt="光猫设置"></p><p>同时在路由器中也要打开ipv6，这样就能正常使用ipv6了。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/3.5xahballud.png" alt="ipv6" title="ipv6"></p><h2 id="2-使用cloudflare及其partner服务"><a href="#2-使用cloudflare及其partner服务" class="headerlink" title="2.使用cloudflare及其partner服务"></a>2.使用cloudflare及其partner服务</h2><h3 id="将域名使用cloudflare解析"><a href="#将域名使用cloudflare解析" class="headerlink" title="将域名使用cloudflare解析"></a>将域名使用cloudflare解析</h3><p>虽然国内也有许多通过cdn加速的网站，但是能支持ipv6cdn的基本都需要按量计费，所以cloudflare成为白嫖党比较好的选择。</p><p>cloudflare为用户提供一部分免费的服务，可以使用它的cdn代理让服务器可以被ipv4网络访问。<a href="https://www.cloudflare-cn.com/">cloudflare-cn.com</a></p><p>在使用之前需要一个域名，可以在阿里腾讯等网站注册域名，新用户也有优惠。</p><p>然后要将域名托管在cloudflare上</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707366910204.39l10xskie.png" alt="cloudflare"></p><p>选择免费套餐后，在购买域名的网站将域名的dns解析更改到cloudflare分配的dns上（如果不需要优选固定ip，可以直接使用cloudflare的dns，如果需要跳过这个地方。）</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707367121452.13lmf60wra.png" alt="分配的dns"></p><p>设置后，一会儿cloudfflare会显示域名有效。便可以在<strong>DNS设置</strong>中添加自己ipv6地址解析。你可以设置名称为www和@的DNS将cdn代理打开，然后这个网站就能通过ipv4打开了。</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707367805106.361f37zhsn.png" alt="dns记录"></p><h3 id="使用partner服务"><a href="#使用partner服务" class="headerlink" title="使用partner服务"></a>使用partner服务</h3><p>cloudflare partner网站有很多，我就以<a href="https://www.mnn.tw/panel/user/index">梦牛</a>演示。先在网站中使用GLobal api key绑定cloudflare账号，具体方法可以看网站的教程。</p><p>点入自己绑定的域名，点解析，可以看到下方有接入方式</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707374863282.92pza8g0rc.png"></p><p>在是使用方式二的一之前，先做好下面的部分</p><h3 id="国内dns解析服务固定cdn-ip"><a href="#国内dns解析服务固定cdn-ip" class="headerlink" title="国内dns解析服务固定cdn ip"></a>国内dns解析服务固定cdn ip</h3><p>首先需要添加域名和将域名的dns解析到dnspod或者阿里云等平台上。这部分和上面使用cloudflare dns一样需要更改域名dns。以dnspod为例：</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707373398335.77dehm3l5j.png" alt="dnspod"></p><p>状态为正常后，点入自己的域名将@和www通过cname，记录值填写梦牛提供的地址（例如：mottoding.cn.cdn.cloudflare.net）</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707375660686.4qr62owp95.png" alt="1707375660686"></p><p>线路类型选择境外是为了固定ip做的准备,如果不继续固定可以换为默认。</p><p>接下来我们可以在这里将@和www的域名解析到cloudflare提供的ip上。下面是cloudflare给出的节点</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">IPv4<br><span class="hljs-number">103.21.244.0</span>/<span class="hljs-number">22</span><br><span class="hljs-number">103.22.200.0</span>/<span class="hljs-number">22</span><br><span class="hljs-number">103.31.4.0</span>/<span class="hljs-number">22</span><br><span class="hljs-number">104.16.0.0</span>/<span class="hljs-number">13</span><br><span class="hljs-number">104.24.0.0</span>/<span class="hljs-number">14</span><br><span class="hljs-number">108.162.192.0</span>/<span class="hljs-number">18</span><br><span class="hljs-number">131.0.72.0</span>/<span class="hljs-number">22</span><br><span class="hljs-number">141.101.64.0</span>/<span class="hljs-number">18</span><br><span class="hljs-number">162.158.0.0</span>/<span class="hljs-number">15</span><br><span class="hljs-number">172.64.0.0</span>/<span class="hljs-number">13</span><br><span class="hljs-number">173.245.48.0</span>/<span class="hljs-number">20</span><br><span class="hljs-number">188.114.96.0</span>/<span class="hljs-number">20</span><br><span class="hljs-number">190.93.240.0</span>/<span class="hljs-number">20</span><br><span class="hljs-number">197.234.240.0</span>/<span class="hljs-number">22</span><br><span class="hljs-number">198.41.128.0</span>/<span class="hljs-number">17</span><br>IPv6<br><span class="hljs-number">2400</span>:cb00::/<span class="hljs-number">32</span><br><span class="hljs-number">2606</span>:<span class="hljs-number">4700</span>::/<span class="hljs-number">32</span><br><span class="hljs-number">2803</span>:f800::/<span class="hljs-number">32</span><br><span class="hljs-number">2405</span>:b500::/<span class="hljs-number">32</span><br><span class="hljs-number">2405</span>:<span class="hljs-number">8100</span>::/<span class="hljs-number">32</span><br>2a06:98c0::/<span class="hljs-number">29</span><br>2c0f:f248::/<span class="hljs-number">32</span><br></code></pre></td></tr></table></figure><p>除此之外可以通过电报群或者<a href="https://www.baipiao.eu.org/cloudflare/ips-v4">ipv4</a>，<a href="https://www.baipiao.eu.org/cloudflare/ips-v6">ipv6</a>获取cf节点信息</p><p>接下来需要对节点进行延迟和速度测试，这里可以用一些开源项目<a href="https://github.com/XIU2/CloudflareSpeedTest">CloudflareSpeedTest</a>或者<a href="https://github.com/badafans/better-cloudflare-ip">better-cloudflare-ip</a>对节点测速。注意可以使用不同运营商的网络环境测试节点速度优选出各个运营商较快的节点。</p><p>再将ip通过dnspod添加即可</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707467751248.58h7r9y2u2.png"></p><h2 id="3-通过ddns映射ip地址到域名"><a href="#3-通过ddns映射ip地址到域名" class="headerlink" title="3.通过ddns映射ip地址到域名"></a>3.通过ddns映射ip地址到域名</h2><p>由于大多数的ipv6地址都是动态的，所以需要使用ddns将ip定时映射给域名以防链接不上。这里我使用<a href="https://github.com/jeessy2/ddns-go">ddns go</a>来演示</p><p>在服务端，对于windows用户可以从github下载对应文件，在主程序的目录下执行即可安装</p><p><code>.\ddns-go.exe -s install</code></p><p>我们打开ddnsgo的设置界面将dnspod和cloudflare的api接入（根据dnsgo的提示），之后将ipv4关闭，ipv6打开</p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707469092507.39l10xskij.png"></p><p><img src="https://jsd.cdn.zzko.cn/gh/motto1/picx-images-hosting@master/1707468654293.1aoualn26y.png"></p><p>点击保存后就可以在日志里看的解析的记录了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/02/06/hello-world/"/>
    <url>/2024/02/06/hello-world/</url>
    
    <content type="html"><![CDATA[<hr><hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
